{"version":3,"sources":["contexts/DragNDrop/index.js","contexts/Data/index.js","util/getLocalStorage.js","components/Post-It/index.js","components/List/index.js","components/Editor/index.js","App.js","index.js"],"names":["DragNDropContext","createContext","DragNDropProvider","children","useState","drag","setDrag","Provider","value","useDragNDrop","useContext","DataContext","DataProvider","key","myLocalStorage","getString","localStorage","getItem","JSON","parse","setItem","stringify","data","setData","visible","setVisible","edited","setEdited","useEffect","params","updateState","dropzone","filter","postIt","state","insertPostIt","removePostIt","index","indexOf","splice","updatePostIt","changePosition","direction","filterByState","postItBeside","postItIndex","postItBesideIndex","useData","PostIt","dragging","setDragging","title","description","author","date","time","color","handleRemovePostIt","event","handleUpdatePostIt","handleOnClickLeft","handleOnClickRight","HandMove","size","style","gridArea","Controller","className","onClick","draggable","onDragStart","target","classList","add","onDragEnd","remove","List","replace","onDragOver","preventDefault","stopPropagation","onDragEnter","tagName","onDragLeave","onDrop","map","Editor","yellow","pink","blue","orange","selected","setSelected","setTitle","setAuthor","setDescription","setState","setDate","setTime","setColor","resetValues","old","Object","keys","reduce","acc","values","restartEditor","handleOnChangeInput","setValue","handleOnClickColor","handleOnClickCancel","Button","isSelected","onSubmit","type","placeholder","onChange","App","PostItDetail","id","clipPathUnits","d","ContainerPostIts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1873984.chunk.js","sourcesContent":["import React, { \r\n  createContext, \r\n  useContext, \r\n  useState, \r\n} from 'react'\r\n\r\nconst DragNDropContext = createContext()\r\n\r\nexport function DragNDropProvider ({ children }) {\r\n  const [ drag, setDrag ] = useState({})\r\n\r\n  return (\r\n    <DragNDropContext.Provider value={{ drag, setDrag }}>\r\n      {children}\r\n    </DragNDropContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nexport const useDragNDrop = () => useContext(DragNDropContext) \r\n","import React, { \r\n  createContext, \r\n  useContext, \r\n  useState, \r\n  useEffect\r\n} from 'react'\r\n\r\nimport getLocalStorage from '../../util/getLocalStorage.js'\r\n\r\nconst DataContext = createContext()\r\n\r\nexport function DataProvider ({ children }) {\r\n  const myLocalStorage = getLocalStorage('post-its')\r\n\r\n  const [ data, setData ] = useState( myLocalStorage.getItem() || [] )\r\n  const [ visible, setVisible ] = useState(false)\r\n  const [ edited, setEdited ] = useState({})\r\n\r\n  useEffect( () => myLocalStorage.setItem(data), [data, myLocalStorage] )\r\n\r\n  const updateState = (drag, dropzone) => setData([ \r\n    ...data.filter( postIt => postIt !== drag ), \r\n    { ...drag, state: dropzone }\r\n  ])\r\n\r\n  const insertPostIt = postIt => setData( [ ...data, postIt ] )\r\n\r\n  const updatePostIt = ( postIt, index ) => {\r\n    data[index] = postIt\r\n    setData([ ...data ])\r\n  }\r\n\r\n  const removePostIt = postIt => {\r\n    const index = data.indexOf(postIt)\r\n    data.splice( index, 1 )\r\n    setData([ ...data ])\r\n  }\r\n\r\n  function changePosition ( postIt, direction ) {\r\n    const filterByState = data.filter( ({ state }) => postIt.state === state )\r\n    const index = filterByState.indexOf(postIt)\r\n    const postItBeside = filterByState[index+direction]\r\n\r\n    if( postItBeside ){\r\n      const postItIndex = data.indexOf(postIt)\r\n      const postItBesideIndex = data.indexOf(postItBeside)\r\n\r\n      data[postItIndex] = postItBeside\r\n      data[postItBesideIndex] = postIt\r\n      \r\n      setData([...data])\r\n    }\r\n  }\r\n\r\n  const params = {\r\n    data,\r\n    visible,\r\n    edited,\r\n\r\n    setEdited,\r\n    setVisible,\r\n\r\n    updateState,\r\n    insertPostIt,\r\n    removePostIt,\r\n    updatePostIt,\r\n    changePosition,\r\n  }\r\n\r\n  return (\r\n    <DataContext.Provider value={params}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nexport const useData = () => useContext(DataContext) \r\n","\r\nexport default key => ({\r\n  getString: () => localStorage.getItem(key), \r\n  getItem: () => JSON.parse( localStorage.getItem(key) ),\r\n  setItem: value =>\r\n    localStorage.setItem( key, JSON.stringify(value) )\r\n})\r\n","import React, { useState } from 'react'\r\n\r\nimport { \r\n  FaArrowLeft, \r\n  FaArrowRight, \r\n  FaTrash, \r\n  FaHandPaper, \r\n  FaHandRock, \r\n  FaEdit \r\n} from 'react-icons/fa'\r\n\r\nimport { useDragNDrop } from '../../contexts/DragNDrop'\r\nimport { useData } from '../../contexts/Data'\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\nfunction PostIt ({ value }) {\r\n  const { setDrag } = useDragNDrop()\r\n  const { removePostIt, setVisible, setEdited, changePosition } = useData()\r\n  const [ dragging, setDragging ] = useState(false)\r\n  const { title, description, author, date, time, color } = value\r\n\r\n\r\n\r\n  const handleDragStart = ({ target }) => {\r\n    setDrag(value)\r\n    setDragging(true)\r\n    target.classList.add( 'dragging' )\r\n  }\r\n\r\n  const handleDragEnd =  ({ target }) => {\r\n    target.classList.remove( 'dragging' )\r\n    setDragging(false)\r\n  }\r\n\r\n  const handleRemovePostIt = event => {\r\n    removePostIt(value)\r\n  }\r\n\r\n  const handleUpdatePostIt = event => {\r\n    setEdited(value)\r\n    setVisible(true)\r\n  }\r\n\r\n  const handleOnClickLeft = event => {\r\n    changePosition( value, -1 )\r\n  }\r\n\r\n  const handleOnClickRight = event => {\r\n    changePosition( value, 1 )\r\n  }\r\n\r\n\r\n\r\n  const HandMove = () => dragging \r\n    ? <FaHandRock size={33} style={{ gridArea: 'move' }} />\r\n    : <FaHandPaper size={33} style={{ gridArea: 'move' }} />\r\n\r\n  const Controller = () => (<section className='controller'>  \r\n    <FaArrowLeft style={{ gridArea: 'left' }}  \r\n      onClick={handleOnClickLeft} />\r\n    <FaArrowRight style={{ gridArea: 'right' }} \r\n      onClick={handleOnClickRight} /> \r\n\r\n    <HandMove /> \r\n    \r\n    <FaEdit style={{ gridArea: 'edit' }}  \r\n      onClick={handleUpdatePostIt} />      \r\n    <FaTrash style={{ gridArea: 'trash' }} \r\n      onClick={ handleRemovePostIt } /> \r\n  </section>)\r\n\r\n\r\n  return (\r\n    <li \r\n      draggable={true} \r\n      className={`post-it ${color} `}\r\n      onDragStart={handleDragStart} \r\n      onDragEnd={handleDragEnd}\r\n    >\r\n\r\n\r\n      <p>{title}</p>\r\n      <p>{description}</p>\r\n      <p>{author}</p>\r\n      <p className='datetime'>\r\n        <span>{date}</span>\r\n        <span>{time}</span>\r\n      </p>\r\n\r\n\r\n      <Controller />\r\n\r\n\r\n\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default PostIt","import React from 'react'\r\nimport { FaPlus } from 'react-icons/fa'\r\n\r\nimport { useDragNDrop } from '../../contexts/DragNDrop'\r\nimport { useData } from '../../contexts/Data'\r\n\r\nimport PostIt from '../Post-It'\r\n\r\nimport './style.css'\r\n\r\nfunction List ({ title }) {\r\n  const { data, updateState, setVisible, setEdited } = useData()\r\n  const { drag, setDrag } = useDragNDrop()\r\n\r\n\r\n\r\n  const preventDefault = event => {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n  }\r\n\r\n  const handleDragEnter = ({ target }) => {\r\n    if( target.tagName === 'UL')\r\n      target.classList.add('drag-enter')\r\n  }\r\n\r\n  const handleDragLeave = ({ target }) => {\r\n    if( target.tagName === 'UL') \r\n      target.classList.remove('drag-enter')\r\n  }\r\n\r\n  const handleDrop = ({ target }) => { \r\n    if( target.tagName === 'UL') {\r\n      updateState( drag, title )\r\n      target.classList.remove('drag-enter')\r\n    }\r\n    setDrag()\r\n  }\r\n\r\n  const handleOnClickAdd = event => {\r\n    setVisible(true)\r\n    setEdited({ state: title })\r\n  }\r\n\r\n\r\n\r\n  const getPostIt = () => data\r\n    .filter( ({state}) => state === title )\r\n    .map( (postIt, index) => (\r\n      <PostIt \r\n        key={index}\r\n        value={postIt} \r\n      />) \r\n    )\r\n\r\n\r\n\r\n  return(\r\n    <section className={`list-container ${title}`}>\r\n      <h1 className='name-list'>\r\n        <span>{title.replace('-', ' ')}</span>\r\n        <span>\r\n          <FaPlus onClick={handleOnClickAdd} />\r\n        </span>\r\n      </h1>\r\n      \r\n      <ul\r\n        onDragOver={preventDefault} \r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onDrop={handleDrop} \r\n      > \r\n        {getPostIt()}\r\n      </ul>\r\n    </section>\r\n  )\r\n\r\n}\r\n\r\nexport default List\r\n","import React, { useState, useEffect } from 'react'\r\nimport { FaSave, FaBan } from 'react-icons/fa'\r\n\r\nimport { useData } from '../../contexts/Data'\r\n\r\nimport './style.css'\r\n\r\nfunction Editor () {\r\n  const { data, visible, setVisible, edited, setEdited, insertPostIt, updatePostIt } = useData()\r\n  const [ selected, setSelected ] = useState({\r\n    yellow: true, pink: false, blue: false, orange: false\r\n  })\r\n\r\n  const [ title, setTitle ] = useState('')\r\n  const [ author, setAuthor ] = useState('')\r\n  const [ description, setDescription ] = useState('')\r\n  const [ state, setState ] = useState('to-do')\r\n  const [ date, setDate ] = useState('')\r\n  const [ time, setTime ] = useState('')\r\n  const [ color, setColor ] = useState('yellow')\r\n\r\n\r\n\r\n  useEffect( () => {\r\n    resetValues(edited || {})\r\n  }, [edited] )\r\n\r\n  useEffect( () => {\r\n    setSelected( old => Object.keys( old )\r\n      .reduce( ( acc, key ) => {\r\n        acc[key] = color === key \r\n        return acc\r\n      }, {} ))\r\n  }, [color] )\r\n\r\n\r\n\r\n  const resetValues = (values = {}) => {\r\n    setSelected({ yellow: true, pink: false, blue: false, orange: false })\r\n    setTitle(values.title || '')\r\n    setAuthor(values.author || '')\r\n    setDescription(values.description || '')\r\n    setState(values.state || '')\r\n    setDate(values.date || '')\r\n    setTime(values.time || '')\r\n    setColor(values.color || 'yellow')\r\n  } \r\n\r\n  const getPostIt = () =>\r\n    ({ title, author, description, date, time, state, color })\r\n\r\n  const restartEditor = () => {\r\n    resetValues()\r\n    setEdited({})\r\n    setVisible(false)\r\n  }\r\n\r\n\r\n  const handleOnChangeInput = ( setValue ) => event =>\r\n    setValue( event.target.value )\r\n\r\n  const handleOnSubmit = event =>\r\n    event.preventDefault()\r\n\r\n  const handleOnClickColor = value => event => {\r\n    setColor(value)\r\n  }\r\n\r\n  const handleOnClickSave = event => {\r\n    const postIt = getPostIt()\r\n    const index = data.indexOf(edited)\r\n    \r\n    index === -1 ? insertPostIt( postIt ) : updatePostIt( postIt, index )\r\n\r\n    restartEditor()\r\n  }\r\n\r\n  const handleOnClickCancel = event => restartEditor()\r\n\r\n\r\n\r\n  const Button = ({ value }) => {\r\n    const isSelected = selected[value] === true ? 'selected': ''\r\n    return(\r\n      <button \r\n        className={`${value} ${isSelected}`}\r\n        onClick={handleOnClickColor(value)}\r\n      ></button>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return(\r\n    <section className={`pop-up ${visible ? 'visible': '' }`} onClick={handleOnClickCancel} >\r\n      <form className='editor' \r\n        onSubmit={handleOnSubmit}\r\n        onClick={ event => event.stopPropagation() }\r\n      >\r\n        <h1>Editor POST-IT</h1>\r\n\r\n        <input \r\n          type='text' placeholder='Title' value={title} \r\n          onChange={handleOnChangeInput(setTitle)} \r\n        />\r\n        \r\n        <input \r\n          type='text' placeholder='Author' value={author} \r\n          onChange={handleOnChangeInput(setAuthor)}\r\n        />\r\n        \r\n        <textarea \r\n          placeholder='Description' value={description} \r\n          onChange={handleOnChangeInput(setDescription)}\r\n        ></textarea>\r\n        \r\n        <select value={state} onChange={handleOnChangeInput(setState)}>\r\n          <option value='to-do'>TO DO</option>\r\n          <option value='in-progress'>IN PROGRESS</option>\r\n          <option value='done'>DONE</option>\r\n        </select>\r\n\r\n        <article className='datetime'>\r\n          <input \r\n            type='date' value={date} \r\n            onChange={handleOnChangeInput(setDate)} \r\n          />\r\n          \r\n          <input \r\n            type='time' value={time} \r\n            onChange={handleOnChangeInput(setTime)} \r\n          />\r\n        </article>\r\n\r\n        <article className={'colors'}>\r\n          {Object.keys( selected )\r\n            .map( key => <Button key={key} value={key} /> )}\r\n        </article>\r\n\r\n        <article className='buttons'>\r\n          <button onClick={handleOnClickSave}>\r\n            <FaSave size={18} />\r\n            <span>Save</span>\r\n          </button>\r\n          <button onClick={handleOnClickCancel}>\r\n            <FaBan size={18} />\r\n            <span>Cancel</span>\r\n          </button>\r\n        </article>\r\n\r\n      </form>\r\n    </section>\r\n  )\r\n\r\n}\r\n\r\nexport default Editor","import React from 'react';\n\nimport List from './components/List/'\nimport Editor from './components/Editor'\nimport { DragNDropProvider } from './contexts/DragNDrop/'\nimport { DataProvider } from './contexts/Data/'\n\nimport './global.css'\n\nfunction App() {\n\n  const PostItDetail = () => (\n    <svg className='recort'>\n      <defs>\n        <clipPath id=\"detail\" clipPathUnits=\"objectBoundingBox\">\n          <path d='M 1 0 L 0 0 L 0 1 L 0.88 1 L 1 0.85 Z' />\n        </clipPath>\n      </defs>\n    </svg>\n  )\n\n  const ContainerPostIts = () => (\n    <div className='container'> \n      { [ 'to-do', 'in-progress', 'done' ].map( key => (\n          <List key={key} title={key} />)) } \n    </div>\n  )\n\n  return (<>\n    <h1 className='kanban-title'>Kanban Desk</h1>\n    <DataProvider>\n\n      <DragNDropProvider>\n        <PostItDetail />\n        <ContainerPostIts />\n      </DragNDropProvider> \n      \n      <Editor />\n    </DataProvider>  \n  </>)   \n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; \n\nReactDOM.render( <App />, document.getElementById('root'));\n"],"sourceRoot":""}